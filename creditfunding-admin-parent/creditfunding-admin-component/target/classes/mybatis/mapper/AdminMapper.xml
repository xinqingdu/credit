<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itxiaodu.credit.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="com.itxiaodu.credit.entity.Admin">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="login_account" jdbcType="VARCHAR" property="loginAccount"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="backup1" jdbcType="CHAR" property="backup1"/>
        <result column="backup2" jdbcType="CHAR" property="backup2"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, login_account, user_password, user_name, email, telephone, create_time, backup1,
        backup2
    </sql>
    <select id="selectByKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
<!--        id, login_account, user_password, user_name, email, telephone, create_time-->
        from admin
        where login_account like concat("%",#{keyword},"%") or
        user_name like concat("%",#{keyword},"%") or
        email like concat("%",#{keyword},"%")
    </select>
    <select id="selectByExample" parameterType="com.itxiaodu.credit.entity.AdminExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteRelationship">
        delete from assign where admin_id=#{adminId}
    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from admin
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.itxiaodu.credit.entity.AdminExample">
        delete from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertRelationship">
        insert into assign(admin_id,role_id) values
        <foreach collection="roleIdList" item="roleId" separator=",">
            (#{adminId},#{roleId})
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.itxiaodu.credit.entity.Admin">
        insert into admin (id, login_account, user_password,
        user_name, email, telephone,
        create_time, backup1, backup2
        )
        values (#{id,jdbcType=INTEGER}, #{loginAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
        #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR},
        #{createTime,jdbcType=DATE}, #{backup1,jdbcType=CHAR}, #{backup2,jdbcType=CHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.itxiaodu.credit.entity.Admin">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="loginAccount != null">
                login_account,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="backup1 != null">
                backup1,
            </if>
            <if test="backup2 != null">
                backup2,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loginAccount != null">
                #{loginAccount,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="backup1 != null">
                #{backup1,jdbcType=CHAR},
            </if>
            <if test="backup2 != null">
                #{backup2,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.itxiaodu.credit.entity.AdminExample" resultType="java.lang.Long">
        select count(*) from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update admin
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.loginAccount != null">
                login_account = #{record.loginAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.userPassword != null">
                user_password = #{record.userPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=DATE},
            </if>
            <if test="record.backup1 != null">
                backup1 = #{record.backup1,jdbcType=CHAR},
            </if>
            <if test="record.backup2 != null">
                backup2 = #{record.backup2,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update admin
        set id = #{record.id,jdbcType=INTEGER},
        login_account = #{record.loginAccount,jdbcType=VARCHAR},
        user_password = #{record.userPassword,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=DATE},
        backup1 = #{record.backup1,jdbcType=CHAR},
        backup2 = #{record.backup2,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.itxiaodu.credit.entity.Admin">
        update admin
        <set>
            <if test="loginAccount != null">
                login_account = #{loginAccount,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="backup1 != null">
                backup1 = #{backup1,jdbcType=CHAR},
            </if>
            <if test="backup2 != null">
                backup2 = #{backup2,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itxiaodu.credit.entity.Admin">
        update admin
        set login_account = #{loginAccount,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_name = #{userName,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        telephone = #{telephone,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=DATE},
        backup1 = #{backup1,jdbcType=CHAR},
        backup2 = #{backup2,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>