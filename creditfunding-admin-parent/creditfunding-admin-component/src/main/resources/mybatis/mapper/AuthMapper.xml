<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itxiaodu.credit.mapper.AuthMapper">
    <resultMap id="BaseResultMap" type="com.itxiaodu.credit.entity.Auth">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="pid" jdbcType="INTEGER" property="pid" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, title, pid
    </sql>
    <select id="selectAssignedAuthName" resultType="string">
<!--    子查询方式    -->
<!--        select name from auth-->
<!--        where id in (-->
<!--           select distinct auth_id from role_auth-->
<!--           where role_id in (-->
<!--               select role_id from assign-->
<!--               where admin_id={#adminId}-->
<!--               )-->
<!--        ) and name !="" ;-->
<!--内连接方式-->
        select distinct name
        from auth
        left join role_auth on auth.id=role_auth.auth_id
        left join assign on role_auth.role_id=assign.role_id
        where assign.admin_id=#{adminId} and name !="" and auth.name is not null
    </select>
    <select id="selectAssignedRoleAuth" resultType="int">
        select auth_id  from role_auth where role_id = #{roleId}
    </select>
    <select id="selectByExample" parameterType="com.itxiaodu.credit.entity.AuthExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from auth
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteAssignedRoleAuth">
        delete from role_auth
        where role_id = #{roleId}
    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from auth
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.itxiaodu.credit.entity.AuthExample">
        delete from auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertAssignedRoleAuth">
        insert into role_auth (role_id,auth_id) values
        <foreach collection="authIdList" item="authId" separator=",">
            (#{roleId},#{authId})
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.itxiaodu.credit.entity.Auth">
        insert into auth (id, name, title,
        pid)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
        #{pid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.itxiaodu.credit.entity.Auth">
        insert into auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="pid != null">
                pid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.itxiaodu.credit.entity.AuthExample" resultType="java.lang.Long">
        select count(*) from auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update auth
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update auth
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        pid = #{record.pid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.itxiaodu.credit.entity.Auth">
        update auth
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itxiaodu.credit.entity.Auth">
        update auth
        set name = #{name,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        pid = #{pid,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>