<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--IOC-扫描service-->
    <context:component-scan base-package="com.itxiaodu.credit.service"></context:component-scan>
    <!--配置事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源装配,从spring-mybatis里面自动获取-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置切入点表达式AOP-->
    <aop:config>
        <!--定位到*ServiceImpl接口-->
        <aop:pointcut id="servicePointcut" expression="execution(* *..*ServiceImpl.*(..))"/>
        <!--切入点关联通知类型-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"></aop:advisor>
    </aop:config>
    <!--配置通知-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--事务属性-->
        <tx:attributes>
            <!--查询只读属性-->
            <tx:method name="get" read-only="true"/>
            <tx:method name="find" read-only="true"/>
            <tx:method name="query" read-only="true"/>
            <tx:method name="count" read-only="true"/>
            <!--其他增删改,批量操作-->
            <!--REQUIRED 获取事务属性: 有则用，无则新建-->
            <!--REQUIRED_NEW 获取事务属性: 必须自己新建-->
            <tx:method name="save" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="delete" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="batch" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <!--其他隔离级别，传播行为....-->
        </tx:attributes>
    </tx:advice>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

</beans>
