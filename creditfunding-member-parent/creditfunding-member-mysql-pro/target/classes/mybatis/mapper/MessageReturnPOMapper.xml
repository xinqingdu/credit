<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itxiaodu.credit.mapper.MessageReturnPOMapper">
    <resultMap id="BaseResultMap" type="com.itxiaodu.credit.entity.po.MessageReturnPO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="return_type" jdbcType="INTEGER" property="returnType"/>
        <result column="support_money" jdbcType="BIGINT" property="supportMoney"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="limit_purchase" jdbcType="INTEGER" property="limitPurchase"/>
        <result column="purchase" jdbcType="INTEGER" property="purchase"/>
        <result column="freight" jdbcType="INTEGER" property="freight"/>
        <result column="invoice" jdbcType="INTEGER" property="invoice"/>
        <result column="return_days" jdbcType="INTEGER" property="returnDays"/>
        <result column="describ_picture_path" jdbcType="VARCHAR" property="describPicturePath"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , project_id, return_type, support_money, content, count, limit_purchase, purchase,
    freight, invoice, return_days, describ_picture_path
    </sql>
    <select id="selectByExample" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPOExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from message_return
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from message_return
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from message_return
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPOExample">
        delete from message_return
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPO">
        insert into message_return (id, project_id, return_type,
                                    support_money, content, count,
                                    limit_purchase, purchase, freight,
                                    invoice, return_days, describ_picture_path)
        values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{returnType,jdbcType=INTEGER},
                #{supportMoney,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
                #{limitPurchase,jdbcType=INTEGER}, #{purchase,jdbcType=INTEGER}, #{freight,jdbcType=INTEGER},
                #{invoice,jdbcType=INTEGER}, #{returnDays,jdbcType=INTEGER}, #{describPicturePath,jdbcType=VARCHAR})
    </insert>

    <insert id="insertReturnPOList" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPO">
        insert into message_return(project_id, return_type,
        support_money, content, count,
        limit_purchase, purchase, freight,
        invoice, return_days, describ_picture_path) values
        <foreach collection="returnPOList" item="returnPO" separator=",">
            (#{projectPOId},#{returnPO.returnType},
            #{returnPO.supportMoney}, #{returnPO.content}, #{returnPO.count},
            #{returnPO.limitPurchase}, #{returnPO.purchase}, #{returnPO.freight},
            #{returnPO.invoice}, #{returnPO.returnDays}, #{returnPO.describPicturePath})
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPO">
        insert into message_return
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="returnType != null">
                return_type,
            </if>
            <if test="supportMoney != null">
                support_money,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="limitPurchase != null">
                limit_purchase,
            </if>
            <if test="purchase != null">
                purchase,
            </if>
            <if test="freight != null">
                freight,
            </if>
            <if test="invoice != null">
                invoice,
            </if>
            <if test="returnDays != null">
                return_days,
            </if>
            <if test="describPicturePath != null">
                describ_picture_path,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="returnType != null">
                #{returnType,jdbcType=INTEGER},
            </if>
            <if test="supportMoney != null">
                #{supportMoney,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="limitPurchase != null">
                #{limitPurchase,jdbcType=INTEGER},
            </if>
            <if test="purchase != null">
                #{purchase,jdbcType=INTEGER},
            </if>
            <if test="freight != null">
                #{freight,jdbcType=INTEGER},
            </if>
            <if test="invoice != null">
                #{invoice,jdbcType=INTEGER},
            </if>
            <if test="returnDays != null">
                #{returnDays,jdbcType=INTEGER},
            </if>
            <if test="describPicturePath != null">
                #{describPicturePath,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPOExample"
            resultType="java.lang.Long">
        select count(*) from message_return
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update message_return
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.projectId != null">
                project_id = #{record.projectId,jdbcType=INTEGER},
            </if>
            <if test="record.returnType != null">
                return_type = #{record.returnType,jdbcType=INTEGER},
            </if>
            <if test="record.supportMoney != null">
                support_money = #{record.supportMoney,jdbcType=BIGINT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.limitPurchase != null">
                limit_purchase = #{record.limitPurchase,jdbcType=INTEGER},
            </if>
            <if test="record.purchase != null">
                purchase = #{record.purchase,jdbcType=INTEGER},
            </if>
            <if test="record.freight != null">
                freight = #{record.freight,jdbcType=INTEGER},
            </if>
            <if test="record.invoice != null">
                invoice = #{record.invoice,jdbcType=INTEGER},
            </if>
            <if test="record.returnDays != null">
                return_days = #{record.returnDays,jdbcType=INTEGER},
            </if>
            <if test="record.describPicturePath != null">
                describ_picture_path = #{record.describPicturePath,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update message_return
        set id = #{record.id,jdbcType=INTEGER},
        project_id = #{record.projectId,jdbcType=INTEGER},
        return_type = #{record.returnType,jdbcType=INTEGER},
        support_money = #{record.supportMoney,jdbcType=BIGINT},
        content = #{record.content,jdbcType=VARCHAR},
        count = #{record.count,jdbcType=INTEGER},
        limit_purchase = #{record.limitPurchase,jdbcType=INTEGER},
        purchase = #{record.purchase,jdbcType=INTEGER},
        freight = #{record.freight,jdbcType=INTEGER},
        invoice = #{record.invoice,jdbcType=INTEGER},
        return_days = #{record.returnDays,jdbcType=INTEGER},
        describ_picture_path = #{record.describPicturePath,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPO">
        update message_return
        <set>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
            <if test="returnType != null">
                return_type = #{returnType,jdbcType=INTEGER},
            </if>
            <if test="supportMoney != null">
                support_money = #{supportMoney,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="limitPurchase != null">
                limit_purchase = #{limitPurchase,jdbcType=INTEGER},
            </if>
            <if test="purchase != null">
                purchase = #{purchase,jdbcType=INTEGER},
            </if>
            <if test="freight != null">
                freight = #{freight,jdbcType=INTEGER},
            </if>
            <if test="invoice != null">
                invoice = #{invoice,jdbcType=INTEGER},
            </if>
            <if test="returnDays != null">
                return_days = #{returnDays,jdbcType=INTEGER},
            </if>
            <if test="describPicturePath != null">
                describ_picture_path = #{describPicturePath,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itxiaodu.credit.entity.po.MessageReturnPO">
        update message_return
        set project_id           = #{projectId,jdbcType=INTEGER},
            return_type          = #{returnType,jdbcType=INTEGER},
            support_money        = #{supportMoney,jdbcType=BIGINT},
            content              = #{content,jdbcType=VARCHAR},
            count                = #{count,jdbcType=INTEGER},
            limit_purchase       = #{limitPurchase,jdbcType=INTEGER},
            purchase             = #{purchase,jdbcType=INTEGER},
            freight              = #{freight,jdbcType=INTEGER},
            invoice              = #{invoice,jdbcType=INTEGER},
            return_days          = #{returnDays,jdbcType=INTEGER},
            describ_picture_path = #{describPicturePath,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>